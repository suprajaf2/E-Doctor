{"ast":null,"code":"var _jsxFileName = \"D:\\\\Infosys  E-doctor (2)\\\\Infosys  E-doctor\\\\src\\\\components\\\\Login.jsx\";\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './Login.css';\nfunction Login() {\n  const [userId, setUserna] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n\n  // Hardcoded admin credentials\n  const adminCredentials = {\n    userId: 'admin',\n    // Admin userId\n    password: 'admin123' // Admin password\n  };\n\n  // Handle forgot password logic (for now, just logging the action)\n  const handleForgotPassword = () => {\n    alert('Forgot password functionality not implemented yet.');\n    // You can replace this with actual logic for sending a reset link or emailing the user\n  };\n  const handleLogin = e => {\n    e.preventDefault();\n\n    // Check for admin login\n    if (userId === adminCredentials.userId && password === adminCredentials.password) {\n      // Admin login successful, navigate to dashboard\n      console.log(\"Admin login successful\", userId);\n      alert('Admin login successful!');\n      navigate('/dashboard'); // Redirect to the admin dashboard\n      return; // Exit the function here to prevent further checks for other users\n    }\n\n    // Retrieve the stored user data from localStorage for normal users\n    const storedUser = JSON.parse(localStorage.getItem('user'));\n\n    // Validate the login credentials for normal users\n    if (storedUser && storedUser.userId === userId && storedUser.password === password) {\n      console.log(\"Login successful:\", storedUser);\n      alert('Login successful!');\n      navigate('/dashboard'); // Redirect to the dashboard\n    } else {\n      console.log(\"Login failed. Invalid userId or password.\");\n      alert('Invalid userId or password!');\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"login-form\",\n    onSubmit: handleLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"userId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    id: \"userId\",\n    name: \"userId\",\n    value: userId,\n    onChange: e => setUsername(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    id: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, \"New user? \", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"/register\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 22\n    }\n  }, \"Register here\")), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: handleForgotPassword,\n    className: \"forgot-password-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, \"Forgot Password?\")));\n}\nexport default Login;","map":{"version":3,"names":["React","useState","useNavigate","Login","userId","setUserna","password","setPassword","navigate","adminCredentials","handleForgotPassword","alert","handleLogin","e","preventDefault","console","log","storedUser","JSON","parse","localStorage","getItem","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","name","value","onChange","setUsername","target","required","href","onClick"],"sources":["D:/Infosys  E-doctor (2)/Infosys  E-doctor/src/components/Login.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './Login.css';\r\n\r\nfunction Login() {\r\n  const [userId, setUserna] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  // Hardcoded admin credentials\r\n  const adminCredentials = {\r\n    userId: 'admin', // Admin userId\r\n    password: 'admin123', // Admin password\r\n  };\r\n\r\n  // Handle forgot password logic (for now, just logging the action)\r\n  const handleForgotPassword = () => {\r\n    alert('Forgot password functionality not implemented yet.');\r\n    // You can replace this with actual logic for sending a reset link or emailing the user\r\n  };\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Check for admin login\r\n    if (userId === adminCredentials.userId && password === adminCredentials.password) {\r\n      // Admin login successful, navigate to dashboard\r\n      console.log(\"Admin login successful\",userId);\r\n      alert('Admin login successful!');\r\n      navigate('/dashboard');  // Redirect to the admin dashboard\r\n      return; // Exit the function here to prevent further checks for other users\r\n    }\r\n\r\n    // Retrieve the stored user data from localStorage for normal users\r\n    const storedUser = JSON.parse(localStorage.getItem('user'));\r\n\r\n    // Validate the login credentials for normal users\r\n    if (storedUser && storedUser.userId === userId && storedUser.password === password) {\r\n      console.log(\"Login successful:\", storedUser);\r\n      alert('Login successful!');\r\n      navigate('/dashboard');  // Redirect to the dashboard\r\n    } else {\r\n      console.log(\"Login failed. Invalid userId or password.\");\r\n      alert('Invalid userId or password!');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <form className=\"login-form\" onSubmit={handleLogin}>\r\n        <h2>Login</h2>\r\n        <label htmlFor=\"userId\">Email</label>\r\n        <input\r\n          type=\"email\"\r\n          id=\"userId\"\r\n          name=\"userId\"\r\n          value={userId}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n          required\r\n        />\r\n        <label htmlFor=\"password\">Password</label>\r\n        <input\r\n          type=\"password\"\r\n          id=\"password\"\r\n          name=\"password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          required\r\n        />\r\n        <button type=\"submit\">Login</button>\r\n        <p>New user? <a href=\"/register\">Register here</a></p>\r\n\r\n        {/* Forgot Password button */}\r\n        <button type=\"button\" onClick={handleForgotPassword} className=\"forgot-password-button\">\r\n          Forgot Password?\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,aAAa;AAEpB,SAASC,KAAKA,CAAA,EAAG;EACf,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACK,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMO,QAAQ,GAAGN,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAMO,gBAAgB,GAAG;IACvBL,MAAM,EAAE,OAAO;IAAE;IACjBE,QAAQ,EAAE,UAAU,CAAE;EACxB,CAAC;;EAED;EACA,MAAMI,oBAAoB,GAAGA,CAAA,KAAM;IACjCC,KAAK,CAAC,oDAAoD,CAAC;IAC3D;EACF,CAAC;EAED,MAAMC,WAAW,GAAIC,CAAC,IAAK;IACzBA,CAAC,CAACC,cAAc,CAAC,CAAC;;IAElB;IACA,IAAIV,MAAM,KAAKK,gBAAgB,CAACL,MAAM,IAAIE,QAAQ,KAAKG,gBAAgB,CAACH,QAAQ,EAAE;MAChF;MACAS,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAACZ,MAAM,CAAC;MAC5CO,KAAK,CAAC,yBAAyB,CAAC;MAChCH,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAE;MACzB,OAAO,CAAC;IACV;;IAEA;IACA,MAAMS,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;;IAE3D;IACA,IAAIJ,UAAU,IAAIA,UAAU,CAACb,MAAM,KAAKA,MAAM,IAAIa,UAAU,CAACX,QAAQ,KAAKA,QAAQ,EAAE;MAClFS,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEC,UAAU,CAAC;MAC5CN,KAAK,CAAC,mBAAmB,CAAC;MAC1BH,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAE;IAC3B,CAAC,MAAM;MACLO,OAAO,CAACC,GAAG,CAAC,2CAA2C,CAAC;MACxDL,KAAK,CAAC,6BAA6B,CAAC;IACtC;EACF,CAAC;EAED,oBACEX,KAAA,CAAAsB,aAAA;IAAKC,SAAS,EAAC,iBAAiB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC9B7B,KAAA,CAAAsB,aAAA;IAAMC,SAAS,EAAC,YAAY;IAACO,QAAQ,EAAElB,WAAY;IAAAY,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACjD7B,KAAA,CAAAsB,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,OAAS,CAAC,eACd7B,KAAA,CAAAsB,aAAA;IAAOS,OAAO,EAAC,QAAQ;IAAAP,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,OAAY,CAAC,eACrC7B,KAAA,CAAAsB,aAAA;IACEU,IAAI,EAAC,OAAO;IACZC,EAAE,EAAC,QAAQ;IACXC,IAAI,EAAC,QAAQ;IACbC,KAAK,EAAE/B,MAAO;IACdgC,QAAQ,EAAGvB,CAAC,IAAKwB,WAAW,CAACxB,CAAC,CAACyB,MAAM,CAACH,KAAK,CAAE;IAC7CI,QAAQ;IAAAf,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACT,CAAC,eACF7B,KAAA,CAAAsB,aAAA;IAAOS,OAAO,EAAC,UAAU;IAAAP,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,UAAe,CAAC,eAC1C7B,KAAA,CAAAsB,aAAA;IACEU,IAAI,EAAC,UAAU;IACfC,EAAE,EAAC,UAAU;IACbC,IAAI,EAAC,UAAU;IACfC,KAAK,EAAE7B,QAAS;IAChB8B,QAAQ,EAAGvB,CAAC,IAAKN,WAAW,CAACM,CAAC,CAACyB,MAAM,CAACH,KAAK,CAAE;IAC7CI,QAAQ;IAAAf,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACT,CAAC,eACF7B,KAAA,CAAAsB,aAAA;IAAQU,IAAI,EAAC,QAAQ;IAAAR,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,OAAa,CAAC,eACpC7B,KAAA,CAAAsB,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,YAAU,eAAA7B,KAAA,CAAAsB,aAAA;IAAGkB,IAAI,EAAC,WAAW;IAAAhB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,eAAgB,CAAI,CAAC,eAGtD7B,KAAA,CAAAsB,aAAA;IAAQU,IAAI,EAAC,QAAQ;IAACS,OAAO,EAAE/B,oBAAqB;IAACa,SAAS,EAAC,wBAAwB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,kBAEhF,CACJ,CACH,CAAC;AAEV;AAEA,eAAe1B,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module"}